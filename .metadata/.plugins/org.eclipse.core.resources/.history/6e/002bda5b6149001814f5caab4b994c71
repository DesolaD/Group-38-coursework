
import java.net.URL;
import java.util.ResourceBundle;

import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.Node;
import javafx.scene.control.Slider;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.ColumnConstraints;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.RowConstraints;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;

public class Warehouse implements Initializable {

	@FXML private Slider heightSlider;
	@FXML private Slider widthSlider;
	@FXML private GridPane grid = new GridPane();
	@FXML private RowConstraints row = new RowConstraints();
	
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		
	}
	
	public Rectangle makeRectangle(int width, int height, Color color){
		Rectangle block = new Rectangle(width, height, color);
		return block;
	}
	
	@FXML
	public void addChild(MouseEvent e){
		Node source = (Node)e.getSource();
		
		int col = GridPane.getColumnIndex(source);
		int row = GridPane.getRowIndex(source);
		
		grid.add(makeRectangle(30, 30, Color.RED), col, row);

	}
	
	@FXML
	public void sliderClickHeight(MouseEvent event){
		while(grid.getRowConstraints().size() > 0){
	        grid.getRowConstraints().remove(0);
	    }
		
		while(grid.getChildren().size() > 1){
			String x = grid.getChildren().toString().substring(1,6);
			if(x.equals("Group")){
				grid.getChildren().remove(1);
				}else{
				grid.getChildren().remove(0);
				}
	    }
		
        for (int i = 0; i <= heightSlider.getValue()-1; i++) {
            RowConstraints x = new RowConstraints();
            x.setPrefHeight(30.0);
            x.setMinHeight(10.0);
            grid.getRowConstraints().add(x);
        }
        
        
        for (int i = 0; i <= heightSlider.getValue()-1;i++){
        	for (int j = 0; j <= widthSlider.getValue()-1;j++){
        		StackPane x = new StackPane();
        		grid.add(x, i, j);
        		System.out.println(i + ","+ j);
        		x.addEventFilter(MouseEvent.MOUSE_PRESSED, new EventHandler<MouseEvent>() {
        		    @Override
        		    public void handle(MouseEvent mouseEvent) {
        		        System.out.println("mouse click detected! " + mouseEvent.getSource());
        		    }
        		});
        	    grid.setColumnIndex(x, i);
        		grid.setRowIndex(x, j);
        	}
        }
	}
	@FXML
	public void sliderClickWidth(MouseEvent event){
		
		while(grid.getColumnConstraints().size() > 0){
	        grid.getColumnConstraints().remove(0);
	    }
		
		while(grid.getChildren().size() > 1){
			String x = grid.getChildren().toString().substring(1,6);
			if(x.equals("Group")){
				grid.getChildren().remove(1);
				}else{
				grid.getChildren().remove(0);
				}
	    }
		
        for (int i = 0; i <= widthSlider.getValue()-1; i++) {
            ColumnConstraints x = new ColumnConstraints();
            x.setPrefWidth(82.0);
            grid.getColumnConstraints().add(x);
        }
        
        for (int i = 0; i <= heightSlider.getValue()-1;i++){
        	for (int j = 0; i <= widthSlider.getValue()-1;i++){
        		grid.add(new StackPane(), i, j);
        	}
        }

	}
	
}
